<?php

namespace Admin\Controller;


use Common\Base\AdminBaseController;
use Custom\Helper\Util;
use Custom\Helper\Oss;
use Custom\Helper\Nav;


//艺术家-推荐作品
class RecommendArtworkController extends AdminBaseController
{
    //推荐作品列表
    public function index()
    {
        $artist = I('get.artist');  //用户名称
        $artwork_name = I('get.artwork_name');  //作品名称
        $page = I('get.page', '1');
        $perPageCount = I('get.perPageCount', '6');

        if(!empty($artist) || !empty($artwork_name)){//搜索作品
            $type = 0;//搜索
            $where = "az_artwork.is_deleted='N' and az_artwork.state=1 and az_artwork.update_times>0";
            if(!empty($artist)){
                $where = $where." and az_user.nickname like '%{$artist}%'";
            }
            if(!empty($artwork_name)){
                $where = $where." and az_artwork.name like '%{$artwork_name}%'";
            }
            $list = M('artwork')
                ->field('az_artwork.id,az_artwork.name,az_artwork.cover,az_user.nickname as artist')
                ->join('az_user on az_artwork.artist=az_user.id', 'left')
                ->where($where)
                ->page($page,$perPageCount)
                ->select();
            $totalCount = M('artwork')
                ->join('az_user on az_artwork.artist=az_user.id', 'left')
                ->where($where)
                ->count();
        }else{//显示推荐作品
            $type = 1;//推荐
            $where=[];
            $list = M('recommend_artwork')
                ->field('az_recommend_artwork.id as recommend_id,az_recommend_artwork.sort,az_artwork.id,az_artwork.name,az_artwork.cover,az_user.nickname as artist')
                ->join('az_artwork on az_artwork.id=az_recommend_artwork.artwork_id', 'left')
                ->join('az_user on az_artwork.artist=az_user.id', 'left')
                ->order('sort')
                ->page($page, $perPageCount)
                ->select();
            $totalCount = M('recommend_artwork')->count();
        }

        //已推荐作品id
        $recommendArtist = M('recommend_artwork')->field('artwork_id')->select();
        $recommendArtistIds = array_column($recommendArtist,'artwork_id');
        foreach ($list as $key => $value) {
            $list[$key]['cover'] = empty($value['cover']) ? '' : $value['cover']; //作品封面图
            if(in_array($value['id'],$recommendArtistIds)){//已推荐
                $list[$key]['type'] = 1;
            }else{//未推荐
                $list[$key]['type'] = 0;
            }
        }

        $queryParam=[
            'artwork_name'=>$artwork_name,
            'artist'=>$artist,
        ];

        $nav = Nav::render(U('Admin/RecommendArtwork/index'), $queryParam, $page, $perPageCount, $totalCount);
        $this->assign('nav', $nav);
        $this->assign('lists', $list);
        $this->assign('type', $type);
        $this->assign('queryParam', $queryParam);
        $this->display('index');
    }

    //推荐作品
    public function recommend()
    {
        $id = intval(trim(I('post.id')));  //id
        $sort = intval(trim(I('post.sort')));  //序号
        $where['id'] = $id;
        $where['state'] = 1;
        $where['is_deleted'] = 'N';
        $where['update_times'] = ['gt',0];
        $artwork = M('artwork')->where($where)->find();
        $recommendArtwork = M('recommend_artwork')->where(['artwork_id' => $id])->find();
        if(empty($artwork)){
            $response = ['error' => 0, 'message' => '参数错误'];
            echo json_encode($response);
        }elseif(!empty($recommendArtwork)){
            $response = ['error' => 1, 'message' => '该作品已经推荐'];
            echo json_encode($response);
        }else{
            $data['artwork_id'] = $id;
            if(!empty($sort)){
                $data['sort'] = $sort;
            }
            $insertId = M('recommend_artwork')->add($data);
            if ($insertId) {
                $response = ['error' => 0, 'message' => 'OK'];
                echo json_encode($response);
            } else {
                $response = ['error' => 1, 'message' => '推荐失败，请重试'];
                echo json_encode($response);
            }
        }

    }

    //修改序号
    public function updateSort(){
        $id = intval(trim(I('post.id')));  //id
        $sort = intval(trim(I('post.sort')));  //序号
        $where['id'] = $id;
        $data['sort'] = $sort;
        $insertId = M('recommend_artwork')->where(['id'=>$id])->save($data);
        if ($insertId) {
            $response = ['error' => 0, 'message' => 'OK'];
            echo json_encode($response);
        } else {
            $response = ['error' => 1, 'message' => '更新失败，请重试'];
            echo json_encode($response);
        }

    }


    //取消推荐作品
    public function cancelRecommend()
    {
        $ids = I('post.id');
        if(!is_array($ids)){//单个id转化成数组
            $ids=[intval($ids)];
        }else{
            foreach($ids as $key => $value)
            {
                $ids[$key]=intval($value);
            }
        }

        if(empty($ids)){
            $response = ['error' => 0, 'message' => '参数错误'];
            echo json_encode($response);
        }else{
            $insertId = M('recommend_artwork')->where(['artwork_id'=>['in',$ids]])->delete();
            if ($insertId) {
                $response = ['error' => 0, 'message' => 'OK'];
                echo json_encode($response);
            } else {
                $response = ['error' => 1, 'message' => '操作失败或作品已经取消推荐'];
                echo json_encode($response);
            }
        }

    }



}
