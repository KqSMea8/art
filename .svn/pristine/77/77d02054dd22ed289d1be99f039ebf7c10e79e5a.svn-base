<?php

namespace Admin\Controller;


use Common\Base\AdminBaseController;
use Custom\Helper\Util;
use Custom\Helper\Oss;
use Custom\Helper\Nav;


//引导页-标签
class RecommendTagsController extends AdminBaseController
{

    //标签列表
    public function index()
    {
        $type = I('get.type',1);
        $queryParams = [
            /*  'page'=>$page,
              'perPageCount'=>$perPageCount,*/
            'type'=>$type,
        ];
        $columns = M('user_recommend_tag')->where(['type'=>$type])->order("sort asc")->select();
        foreach ($columns as &$data) {
            //所属类型 1--类型  2--题材
            switch($data['type']){
                case 1:
                    $data['type'] = '类型';break;
                case 2:
                    $data['type'] = '题材';break;
            }
        }

        $this->assign('lists', $columns);
        $this->assign('queryParams', $queryParams);
        $this->display('index');
    }


    public function showAdd()
    {
        $type = I('get.type',1);
        $this->assign('type', $type);
        $this->display('add');
    }

    //添加标签操作
    public function add()
    {
        $sort = intval(trim(I('post.sort')));  //序号
        $type = intval(trim(I('post.type')));  //类型
        $name = addslashes(trim(I('post.name')));  //名称
        if ($_FILES['image']['error'] == 4) {
            $response = ['error' => 2, 'message' => '没有上传图片'];
            echo json_encode($response);
        } else {
            //处理上传图片
            $imgbuff = file_get_contents($_FILES['image']['tmp_name']);
            $result = Oss::upload($imgbuff, 'png');
            $image = $result['info']['url'];
            $data = [
                'sort' => $sort,
                'type' => $type,
                'name' => $name,
                'image' => $image,
            ];
            //插入数据，返回插入后的id
            $insert_id = M('user_recommend_tag')->add($data);
            if ($insert_id) {
                $response = ['error' => 0, 'message' => 'OK'];
                echo json_encode($response);
            } else {
                $response = ['error' => 1, 'message' => '添加失败，请重试'];
                echo json_encode($response);
            }
        }
    }

    //删除标签操作
    public function delete()
    {
        $ids = I('post.id');
        if(!is_array($ids)){//单个id转化成数组
            $ids=[intval($ids)];
        }else{
            foreach($ids as $key => $value)
            {
                $ids[$key]=intval($value);
            }
        }

        $where['id'] = array('in',$ids);
        $num = M('user_recommend_tag')->where($where)->delete();
        $return=['error'=>0,'delete_num'=>$num];
        echo json_encode($return);
    }

    //修改序号
    public function updateSort(){
        $id = intval(trim(I('post.id')));  //id
        $sort = intval(trim(I('post.sort')));  //序号
        $where['id'] = $id;
        $data['sort'] = $sort;
        $insertId = M('user_recommend_tag')->where(['id'=>$id])->save($data);
        if ($insertId) {
            $response = ['error' => 0, 'message' => 'OK'];
            echo json_encode($response);
        } else {
            $response = ['error' => 1, 'message' => '更新失败，请重试'];
            echo json_encode($response);
        }

    }

    //编辑页面显示
    public function showEdit()
    {
        $id = intval(I('get.id'));
        $data = M('user_recommend_tag')->find($id);
        $this->assign('data', $data);
        $this->display('edit');
    }

    //编辑标签操作
    public function edit()
    {
        $id = intval(I('post.id'));  //ID
        $sort = intval(trim(I('post.sort')));  //序号
        $type = intval(trim(I('post.type')));  //类型
        $name = addslashes(trim(I('post.name')));  //名称
        if ($_FILES['image']['error'] == 4) {
            $data = [
                'sort' => $sort,
                'type' => $type,
                'name' => $name,
            ];
        }else{
            //处理上传图片
            $imgbuff = file_get_contents($_FILES['image']['tmp_name']);
            $result = Oss::upload($imgbuff, 'png');
            $image = $result['info']['url'];
            $data = [
                'sort' => $sort,
                'type' => $type,
                'name' => $name,
                'image' => $image,
            ];
        }

        $where['id'] = $id;
        $insert_id = M('user_recommend_tag')->where($where)->save($data);
        if ($insert_id) {
            $response = ['error' => 0, 'message' => 'OK'];
            echo json_encode($response);
        } else {
            $response = ['error' => 1, 'message' => '更新失败，请重试'];
            echo json_encode($response);
        }
    }

}
